generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Audio {
  id          Int      @id @default(autoincrement())
  originalUrl String   // URL оригинальной записи
  clonedUrl   String?  // URL клонированного голоса от ElevenLabs
  voiceId     String?  // ID голоса в ElevenLabs
  status      String   @default("processing") // processing, completed, error
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ChatResponse {
  id        Int      @id @default(autoincrement())
  question  String
  audioUrl  String
  voiceId   String?  // Связь с клонированным голосом
  createdAt DateTime @default(now())
}

model Avatar {
  id          Int      @id @default(autoincrement())
  name        String
  imageUrl    String   // URL статичного фото
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Связанные анимированные видео
  animations AvatarAnimation[]
}

model AvatarAnimation {
  id        Int      @id @default(autoincrement())
  avatarId  Int
  audioUrl  String   // URL аудиофайла для анимации
  videoUrl  String   // URL сгенерированного видео с анимацией губ
  text      String?  // Текст, который произносит аватар
  voiceId   String?  // ID голоса, используемого для речи
  status    String   @default("processing") // processing, completed, error
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  avatar Avatar @relation(fields: [avatarId], references: [id], onDelete: Cascade)
}