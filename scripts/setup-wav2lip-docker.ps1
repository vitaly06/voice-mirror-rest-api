# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ Wav2Lip Docker –æ–±—Ä–∞–∑–∞

Write-Host "üöÄ –°–±–æ—Ä–∫–∞ Wav2Lip Docker –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
try {
    docker --version | Out-Null
} catch {
    Write-Host "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è Windows." -ForegroundColor Red
    exit 1
}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition
$projectRoot = Split-Path -Parent $scriptPath
Set-Location $projectRoot

Write-Host "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(Get-Location)" -ForegroundColor Green

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —Å –ø–æ–º–æ—â—å—é docker-compose
Write-Host "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ —á–µ—Ä–µ–∑ docker-compose..." -ForegroundColor Yellow

try {
    docker-compose build wav2lip
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!" -ForegroundColor Green
        
        # –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ wav2lip —Å–µ—Ä–≤–∏—Å–∞
        Write-Host "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ Wav2Lip —Å–µ—Ä–≤–∏—Å–∞..." -ForegroundColor Yellow
        docker-compose up -d wav2lip
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Wav2Lip —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000!" -ForegroundColor Green
            Write-Host "üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–¥–æ—Ä–æ–≤—å–µ: http://localhost:5000/health" -ForegroundColor Cyan
            Write-Host "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:5000/" -ForegroundColor Cyan
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
            Write-Host "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..." -ForegroundColor Yellow
            Start-Sleep -Seconds 30
            
            try {
                $response = Invoke-WebRequest -Uri "http://localhost:5000/health" -UseBasicParsing -TimeoutSec 10
                if ($response.StatusCode -eq 200) {
                    Write-Host "‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!" -ForegroundColor Green
                } else {
                    Write-Host "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: $($response.StatusCode)" -ForegroundColor Yellow
                }
            } catch {
                Write-Host "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –º–æ–∂–µ—Ç –µ—â–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:" -ForegroundColor Yellow
                Write-Host "docker-compose logs wav2lip" -ForegroundColor White
            }
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" -ForegroundColor Red
            exit 1
        }
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host "üéâ Wav2Lip Docker setup –∑–∞–≤–µ—Ä—à–µ–Ω!" -ForegroundColor Green
Write-Host ""
Write-Host "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º:" -ForegroundColor Yellow
Write-Host "  –°—Ç–∞—Ç—É—Å:     docker-compose ps" -ForegroundColor White
Write-Host "  –õ–æ–≥–∏:       docker-compose logs wav2lip" -ForegroundColor White
Write-Host "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  docker-compose stop wav2lip" -ForegroundColor White
Write-Host "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart wav2lip" -ForegroundColor White
Write-Host "  –£–¥–∞–ª–µ–Ω–∏–µ:   docker-compose down wav2lip" -ForegroundColor White