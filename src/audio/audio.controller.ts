import {
  Controller,
  Post,
  Get,
  Body,
  Param,
  Query,
  UploadedFile,
  UseInterceptors,
  ParseIntPipe,
  HttpException,
  HttpStatus,
  ValidationPipe,
} from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiConsumes,
  ApiBody,
  ApiResponse,
  ApiParam,
  ApiQuery,
  ApiProperty,
} from '@nestjs/swagger';
import { FileInterceptor } from '@nestjs/platform-express';
import { AudioService } from './audio.service';
import {
  GenerateSpeechDto,
  AudioUploadResponseDto,
  AudioStatusDto,
  ChatResponseDto,
  GeneratedSpeechDto,
} from './dto/audio.dto';

class FileUploadDto {
  @ApiProperty({
    type: 'string',
    format: 'binary',
    description: '–ê—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (WAV, MP3, M4A, –¥–æ 10MB, –¥–æ 1 –º–∏–Ω—É—Ç—ã)',
  })
  file: any;
}

@ApiTags('üé§ –ê—É–¥–∏–æ –∏ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏')
@Controller('audio')
export class AudioController {
  constructor(private readonly audioService: AudioService) {}

  @Post('upload')
  @ApiOperation({
    summary: 'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—É—é –∑–∞–ø–∏—Å—å',
    description:
      '–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞ —á–µ—Ä–µ–∑ ElevenLabs API. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: WAV, MP3, M4A. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ 1 –º–∏–Ω—É—Ç—ã.',
  })
  @ApiConsumes('multipart/form-data')
  @ApiBody({
    description: '–ê—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞',
    type: FileUploadDto,
  })
  @ApiResponse({
    status: 200,
    description: '–ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞ –∑–∞–ø—É—â–µ–Ω–æ',
    type: AudioUploadResponseDto,
  })
  @ApiResponse({
    status: 400,
    description:
      '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø, —Ä–∞–∑–º–µ—Ä –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ñ–∞–π–ª–∞)',
  })
  @UseInterceptors(FileInterceptor('file'))
  async uploadAudio(
    @UploadedFile() file: Express.Multer.File,
  ): Promise<AudioUploadResponseDto> {
    if (!file) {
      throw new HttpException('–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω', HttpStatus.BAD_REQUEST);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    const allowedMimes = ['audio/wav', 'audio/mp3', 'audio/mpeg', 'audio/m4a'];
    if (!allowedMimes.includes(file.mimetype)) {
      throw new HttpException(
        '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã: WAV, MP3, M4A',
        HttpStatus.BAD_REQUEST,
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 10MB)
    if (file.size > 10 * 1024 * 1024) {
      throw new HttpException(
        '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB',
        HttpStatus.BAD_REQUEST,
      );
    }

    return this.audioService.uploadAudio(file);
  }

  @Get('status/:id')
  @ApiOperation({
    summary: 'üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ',
    description:
      '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≥–æ–ª–æ—Å–µ.',
  })
  @ApiParam({
    name: 'id',
    description: 'ID –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏',
    example: 1,
  })
  @ApiResponse({
    status: 200,
    description: '–°—Ç–∞—Ç—É—Å –∞—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω',
    type: AudioStatusDto,
  })
  @ApiResponse({
    status: 404,
    description: '–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
  })
  async getAudioStatus(
    @Param('id', ParseIntPipe) id: number,
  ): Promise<AudioStatusDto> {
    return this.audioService.getAudioStatus(id);
  }

  @Get('chat-responses')
  @ApiOperation({
    summary: 'üí¨ –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è —á–∞—Ç–∞',
    description:
      '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —á–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. –ú–æ–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ ID –≥–æ–ª–æ—Å–∞.',
  })
  @ApiQuery({
    name: 'voiceId',
    description: 'ID –≥–æ–ª–æ—Å–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)',
    required: false,
    example: 'voice_id_123456',
  })
  @ApiResponse({
    status: 200,
    description: '–°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω',
    type: [ChatResponseDto],
  })
  async getChatResponses(
    @Query('voiceId') voiceId?: string,
  ): Promise<ChatResponseDto[]> {
    return this.audioService.getChatResponses(voiceId);
  }

  @Post('generate-speech')
  @ApiOperation({
    summary: 'üó£Ô∏è –°–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—á—å',
    description:
      '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏–∑ —Ç–µ–∫—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–æ–ª–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ ElevenLabs API.',
  })
  @ApiBody({
    description: '–î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏',
    type: GenerateSpeechDto,
  })
  @ApiResponse({
    status: 200,
    description: '–†–µ—á—å —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∞',
    type: GeneratedSpeechDto,
  })
  @ApiResponse({
    status: 400,
    description: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: text –∏–ª–∏ voiceId',
  })
  @ApiResponse({
    status: 500,
    description: '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏',
  })
  async generateSpeech(
    @Body(ValidationPipe) body: GenerateSpeechDto,
  ): Promise<GeneratedSpeechDto> {
    return this.audioService.generateCustomResponse(body.text, body.voiceId);
  }
}
